WHITESPACE = _{ " " | "\t" | "\r" | "\n" | "\0" }
COMMENT    = _{ "#" ~ (!("\n") ~ ANY)* }

// reader_macro = { "'" | ";" | "~" | "," | "|" }

symbol_characters = _{ '0'..'9' | 'a'..'z' | 'A'..'Z' | '\x80'..'\xFF' | "!" | "$" | "%" | "&" | "*" | "+" | "-" | "." | "/" | ":" | "<" | "?" | "=" | ">" | "@" | "^" | "_" }

token  = @{ symbol_characters+ }
hex    =  { '0'..'9' | 'a'..'f' | 'A'..'F' }
escape = @{
    "\\" ~ ("n" | "t" | "r" | "z" | "f" | "e" | "v" | "0" | "\"" | "\\" | ("x" ~ hex{2}) | ("u" ~ hex{4}) | ("U" ~ hex{6}))
}

symbol   =  { token }
keyword  = @{ ":" ~ symbol_characters* }
constant = @{ "true" | "false" | "nil" }

bytes       = ${ "\"" ~ bytes_inner ~ "\"" }
bytes_inner = @{ (escape | !"\"" ~ ANY)* }
string      =  { bytes }
buffer      = ${ "@" ~ bytes }

long_bytes       = ${ PUSH("`"+) ~ long_bytes_inner ~ POP }
long_bytes_inner = @{ (!PEEK ~ ANY)* }
long_string      =  { long_bytes }
long_buffer      = ${ "@" ~ long_bytes }

number = @{
    "-"? ~ ("0" | ASCII_NONZERO_DIGIT ~ ASCII_DIGIT*) ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ ("+" | "-")? ~ ASCII_DIGIT+)?
}

value = _{ constant | number | keyword | string | buffer | long_string | long_buffer | p_array | b_array | p_tuple | b_tuple | struct_ | table | symbol }

// value = ${ (reader_macro | WHITE_SPACE)* ~ raw_value ~ (WHITE_SPACE)* }

root  = _{ value* }
root2 = _{ (value ~ value)* }

p_tuple = { "(" ~ root ~ ")" }
b_tuple = { "[" ~ root ~ "]" }
struct_ = { "{" ~ root2 ~ "}" }

p_array = ${ "@" ~ p_tuple }
b_array = ${ "@" ~ b_tuple }
table   = ${ "@" ~ struct_ }

main = { SOI ~ root ~ EOI }
